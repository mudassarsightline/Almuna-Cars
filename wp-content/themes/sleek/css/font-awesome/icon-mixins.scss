//Default config
$button-padding-vertical: .8rem !default;
$button-padding-horizontal: 2.6rem !default;
$default-size: 1rem !default;
$shadow-color: rgba(0, 0, 0, .2) !default;

/**
 * @icon
 *
 * Adds an icon to an element
 *
 * @param	string		$icon: the icon to use, for example "\f150" or $fa-var-toggle-down
 * @param	string		$where: where the icon should be placed "before" or "after"
 */
@mixin icon ($icon, $where: before) {
	&:#{$where} {
		// Taken directly from FontAwesome CSS
		display: inline-block;
		font: normal normal normal 14px/1 FontAwesome;
		font-size: inherit;
		text-rendering: auto;
		-webkit-font-smoothing: antialiased;
		-moz-osx-font-smoothing: grayscale;
		transform: translate(0, 0);
	//	vertical-align: middle; // Added

		// Insert the icon
		content: $icon;

		// Some margin
		@if ($where == before) {
			margin-right: .3rem;
		}
		@else {
			margin-left: .3rem;
		}
	}

	&.button:not(.fixed):not(.only):#{$where} {
		@if ($where == before) {
			margin-left: -($button-padding-horizontal - ($button-padding-vertical * 2)); // TODO: Assuming there's more left padding than top
			margin-right: .5rem;
		}
		@else {
			margin-right: -($button-padding-horizontal - ($button-padding-vertical * 2));
			margin-left: .5rem;
		}
	}
}

/**
 * @icon-fixed
 *
 * Fixes the position of the icon on either side of the element (useful for icons inside block-elements)
 *
 * @param	string		$where: where the icon should be placed "before" or "after"
 */
@mixin icon-fixed ($where: before) {
	position: relative;

	&:#{$where} {
		text-indent: 0;
		position: absolute;
		top: 50%;
		transform: translateY(-50%);

		@if ($where == before) {
			left: 0;
		}
		@else {
			right: 0;
		}
	}

	// Icons inside buttons shouldnt be flush left/right
	&.button:#{$where} {
		@if ($where == before) {
			left: $button-padding-vertical * 2;
		}
		@else {
			right: $button-padding-vertical * 2;
		}
	}


	&.button.left:not(.after), 
	&.button.left:not(.after) {
		padding-left: calc(#{$button-padding-vertical * 2} + 2rem);
	}

	&.after.button.right, 
	&.after.button.right {
		padding-left: $button-padding-horizontal;
		padding-right: calc(#{$button-padding-vertical * 2} + 2rem);
	}
}

/**
 * @icon-only
 *
 * Removes any text inside the element and displays only the icon
 *
 * @param	string		$where: should only be needed if you for some reason include the button "after"
 */
@mixin icon-only ($where: before) {
	font-size: 0 !important;
	text-decoration: none !important;

	&:#{$where} {
		margin: 0;
		font-size: $default-size;
		line-height: inherit;
	}
}

/**
 * @icon-framed
 *
 * Gives the button a round frame with some shadow
 * Affects both before and after so you may need to set either to display: none too
 */
@mixin icon-framed {
	&:before, 
	&:after {
		background: rgba(0, 0, 0, .1);
		display: inline-block;
		padding: 5px 6px;
		line-height: 1;
		border-radius: 100%;
		box-shadow: inset 1px 1px 1px $shadow-color;
	}

	&.button:before {
		transform: translateX(-6px);
	}

	&.button:after {
		transform: translateX(6px);
	}

	&.button.fixed:before {
		transform: translateY(-50%) translateX(-6px);
	}

	&.button.fixed:after {
		transform: translateY(-50%) translateX(6px);
	}
}
