/**
 * @button
 *
 * Creates a button
 *
 * @param	color		$color: the background-color of the button, also used for border color, gradient and text-shadow if set
 * @param	percent		$fade: the amount of fade/gradient the button should have
 * @param	unit		$border-radius: the amount of border radius
 * @param	border		$border: a border declaration like "1px dashed red" OR "true" in which case a default border based on $color will be used
 * @param	shadow		$shadow: a box-shadow declaration like "1px 1px 2px black" OR "true" in which case a default box-shadow will be used
 * @param	unit		$padding-vertical: top and bottom padding
 * @param	unit		$padding-horizontal: left and right padding
 */
@mixin button (
	$color: $button-color, 
	$fade: $button-fade, 
	$border-radius: $button-border-radius, 
	$border: $button-border, 
	$shadow: $button-shadow, 
	$padding-vertical: $button-padding-vertical, 
	$padding-horizontal: $button-padding-horizontal, 
	$font-size: $button-font-size
) {
	@include button-background($color, $fade, $border);

	display: inline-block;
	vertical-align: middle;

	box-sizing: border-box;

	padding: $padding-vertical $padding-horizontal;

	font-size: $font-size;
	color: $white-color;
	font-weight: bold;
	text-decoration: none;
	text-align: center;
	line-height: $body-line-height;
	font-style: normal;

	transition: all $transition-speed $transition-easing;
	border-radius: $button-border-radius;

	// Box shadow
	@if ($shadow == true) {
		box-shadow: 1px 1px 1px $shadow-color;
	}
	@elseif ($shadow) {
		box-shadow: $shadow;
	}
	@else {
		box-shadow: 0;
	}

	// Hover and visited (:active set byt button-background())
	&:visited {
		color: $white-color;
	}

	&:hover {
		color: $white-color;
		text-decoration: none;

		// Box shadow
		@if ($shadow == true) {
			box-shadow: 2px 2px 6px rgba($shadow-color, .5);
		}
		@elseif ($shadow) {
			box-shadow: $shadow; // TODO: So it can't be animated??
		}
		@else {
			box-shadow: 0;
		}
	}
}

/**
 * @button-background
 *
 * Used to only set color specific stuff like background, border and text-shadow
 */
@mixin button-background ($color: $button-color, $fade: $button-fade, $border: $button-border) {
	// Gradient(?) background
	@if ($fade > 0) {
		background-image: linear-gradient(180deg, $color, darken($color, $fade));
	
		&:active {
			background-image: linear-gradient(180deg, darken($color, $fade), $color);
		}
	}
	@else {
		background-color: $color;
	}

	// Border
	@if ($border == true) {
		border: 4px solid lighten($color, 10%);
	}
	@elseif ($border) {
		border: $border;
	}
	@else {
		border: 0;
	}

	// Text shadow
	$btn-shadow-color: $shadow-color;

	@if ($color != transparent) {
		$btn-shadow-color: darken($color, 20%);
	}

	text-shadow: -1px -1px 0 $btn-shadow-color;
}

/**
 * CSS Classes
 */
.button {
	@include button();

	// Alignment, block etc
	&.block {
		display: block;
		margin-bottom: $margin;
	}

	&.left {
		text-align: left;
	}

	&.right {
		text-align: right;
	}

	// Different colors
	&.secondary {
		@include button-background($button-secondary-color);
	}

	&.disabled {
		@include button-background($button-disabled-color);
	}
}
